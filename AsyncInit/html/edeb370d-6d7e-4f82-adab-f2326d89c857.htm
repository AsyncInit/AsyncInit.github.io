<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>How To Derive from an AsyncInit Base Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="howto,derive" /><meta name="Microsoft.Help.Id" content="edeb370d-6d7e-4f82-adab-f2326d89c857" /><meta name="Description" content="This topic details the steps necessary for defining a type that derives from an AsyncInit base class." /><meta name="Microsoft.Help.ContentType" content="How To" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">AsyncInit<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="a920d297-289f-46ea-aa8b-338f484ad83c.htm" title="AsyncInit" tocid="roottoc">AsyncInit</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="c0f9e874-dd33-473b-a245-85fc69447a4b.htm" title="How To" tocid="c0f9e874-dd33-473b-a245-85fc69447a4b">How To</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="2ac5864f-d7ba-4ef7-a487-77ecfc2aab3a.htm" title="Install AsyncInit" tocid="2ac5864f-d7ba-4ef7-a487-77ecfc2aab3a">Install AsyncInit</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="edeb370d-6d7e-4f82-adab-f2326d89c857.htm" title="Derive from an AsyncInit Base Class" tocid="edeb370d-6d7e-4f82-adab-f2326d89c857">Derive from an AsyncInit Base Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="c731bb1a-010a-40c6-856b-421ebbd05a26.htm" title="Implement an AsyncInit Interface" tocid="c731bb1a-010a-40c6-856b-421ebbd05a26">Implement an AsyncInit Interface</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="f175305f-89a6-498e-add6-e803be90433e.htm" title="Use AsyncInit on Silverlight" tocid="f175305f-89a6-498e-add6-e803be90433e">Use AsyncInit on Silverlight</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Help.png" /></td><td class="titleColumn">How To Derive from an AsyncInit Base Class</td></tr></table><span class="introStyle"></span><div class="summary"><p>This topic details the steps necessary for defining a type that derives from an AsyncInit base class.</p></div><div class="subSection"><ol><li><p>
              Determine the types of the initialization arguments (if any), e.g. <span class="code">IProgress&lt;long&gt;</span>.
            </p></li><li><p>Import the AsyncInit namespace:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAADBFAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAADBFAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAADBFAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAADBFAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Ditto.AsyncInit;</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAADBFAAA");</script></li><li><p>
              Derive from the corresponding <span class="code">AsyncInitBase</span> or <span class="code">CancelableAsyncInitBase</span><em>(recommended)</em>, specifying your class as the first generic type argument:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAACBFAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAACBFAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAACBFAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAACBFAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">class</span> UniversalAnswerService : CancelableAsyncInitBase&lt;UniversalAnswerService, IProgress&lt;<span class="highlight-keyword">long</span>&gt;&gt;
{
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">int</span> Answer { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">private</span> <span class="highlight-keyword">set</span>; }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAACBFAAA");</script></li><li><p>
              Implement a private parameterless constructor, passing <span class="code">null</span> as parameter to <span class="code">base</span>:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAABBFAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABBFAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAABBFAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABBFAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">private</span> UniversalAnswerService()
: <span class="highlight-keyword">base</span>(<span class="highlight-keyword">null</span>)
{
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABBFAAA");</script></li><li><p>
              Override <span class="code">InitAsync()</span>:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAAABFAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAABFAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAAABFAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAAABFAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">async</span> Task InitAsync(IProgress&lt;<span class="highlight-keyword">long</span>&gt; progress, CancellationToken cancellationToken)
{
    <span class="highlight-keyword">await</span> Task.Delay(TimeSpan.FromDays(<span class="highlight-number">7500000</span> * <span class="highlight-number">365.25</span>), cancellationToken);
    Answer = <span class="highlight-number">42</span>;
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAAABFAAA");</script></li></ol>
          Your class may now be consumed asynchronously:
        </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAEAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAEAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> service = <span class="highlight-keyword">await</span> UniversalAnswerService.CreateAsync(progress, cancellationToken);
<span class="highlight-keyword">var</span> answer = service.Answer;</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAEAAA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID2RBSection" class="collapsibleSection"><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="c731bb1a-010a-40c6-856b-421ebbd05a26.htm">How To Implement an AsyncInit Interface</a></div><div class="seeAlsoStyle"><a href="c0f9e874-dd33-473b-a245-85fc69447a4b.htm">AsyncInit How Tos</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p>Copyright © Dmitry Shechtman 2014-2015</p></div></body></html>